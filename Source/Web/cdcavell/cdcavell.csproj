<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
	  <RootNamespace>cdcavell</RootNamespace>
	  <Version>1.0.0.8</Version>
	  <DocumentationFile>../../../Documentation/Source/$(AssemblyName).xml</DocumentationFile>
	  <UserSecretsId>7e0ff3e4-a0a2-4cb5-985c-85156cc56a57</UserSecretsId>
	  <Authors>Christopher D. Cavell</Authors>
	  <Product>Website</Product>
	  <Description>Personal website for Christopher D. Cavell. An ongoing development of a Net Core 3.1 MVC application utilizing OAuth 2.0 framework for authentication. Built with Brock Allen &amp; Dominick Baier's IdentityServer4 v4.1.1. This version also includes Microsoft's Bing Custom Search API with Eugene Simakin's jQuery pagination plugin v1.4.2. Application can easily be changed to use SAML2P in place of OAuth 2.0 for authentication, with the Rsk.Saml SAML component from Rock Solid Knowledge.</Description>
	  <Copyright>2020 - Christopher D. Cavell</Copyright>
	  <PackageLicenseFile>LICENSE</PackageLicenseFile>
	  <PackageProjectUrl>https://cdcavell.name</PackageProjectUrl>
	  <RepositoryType>Git</RepositoryType>
	  <PackageIcon>icon.png</PackageIcon>
	  <RepositoryUrl>https://github.com/cdcavell/cdcavell.name</RepositoryUrl>
	  <NeutralLanguage>en-US</NeutralLanguage>
	  <AssemblyName>CDCavell</AssemblyName>
	  <AssemblyVersion>1.0.0.8</AssemblyVersion>
	  <FileVersion>1.0.0.8</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="wwwroot\.well-known\microsoft-identity-association.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.SEOHelper" Version="1.0.1" />
    <PackageReference Include="BuildBundlerMinifier" Version="3.2.449" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="3.1.9" />
    <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.2.0" />
    <PackageReference Include="Microsoft.Azure.CognitiveServices.Search.CustomSearch" Version="2.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.9" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.9" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.9">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Logging.ApplicationInsights" Version="2.15.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.8.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Libraries\CDCavell.ClassLibrary.Web\CDCavell.ClassLibrary.Web.csproj" />
  </ItemGroup>

	<ItemGroup>
		<_findDllFile Include="../../../Documentation/Source/XmlToMarkdown.dll" />
		<_findJsonFile Include="../../../Documentation/Source/XmlToMarkdown.runtimeconfig.json" />
		<_findLibraryFile Include="../../../Documentation/Source/CDCavell.ClassLibrary.Commons.dll" />
	</ItemGroup>

	<ItemGroup>
	  <None Include="..\..\..\LICENSE">
	    <Pack>True</Pack>
	    <PackagePath></PackagePath>
	  </None>
	  <None Include="wwwroot\img\icon.png">
	    <Pack>True</Pack>
	    <PackagePath></PackagePath>
	  </None>
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="wwwroot\lib\bootstrap\" />
	</ItemGroup>

	<Target Name="BuildXmlToMarkdown" AfterTargets="AfterBuild" DependsOnTargets="AfterBuild" Condition="Exists('@(_findDllFile)') AND Exists('@(_findJsonFile)') AND Exists('@(_findLibraryFile)')">
		<Exec Command="cd ../../../Documentation/Source/" />
		<Exec Command="dotnet XmlToMarkdown.dll Transform.xsl" WorkingDirectory="../../../Documentation/Source/" />
	</Target>

	<Target Name="UpdateWiki" AfterTargets="BuildXmlToMarkdown" DependsOnTargets="BuildXmlToMarkdown" Condition="Exists('@(_findDllFile)')&#xD;&#xA;                 AND Exists('@(_findJsonFile)') &#xD;&#xA;                 AND Exists('@(_findLibraryFile)')">
		<Exec Command="cd ../../../Documentation/Source/wiki/" />
		<Exec Command="git add ." WorkingDirectory="../../../Documentation/Source/wiki/" />
		<Exec Command="git commit -m &quot;Update wiki submodule&quot;" WorkingDirectory="../../../Documentation/Source/wiki/" ContinueOnError="true">
			<Output TaskParameter="ExitCode" ItemName="ErrorCode" />
		</Exec>
		<Exec Command="git push origin master" WorkingDirectory="../../../Documentation/Source/wiki/" Condition="'@(ErrorCode)'=='0'" />
	</Target>

</Project>
