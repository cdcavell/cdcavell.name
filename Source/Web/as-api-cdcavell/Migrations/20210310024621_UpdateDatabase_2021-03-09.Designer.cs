// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using as_api_cdcavell.Data;

namespace as_api_cdcavell.Migrations
{
    [DbContext(typeof(AuthorizationServiceDbContext))]
    [Migration("20210310024621_UpdateDatabase_2021-03-09")]
    partial class UpdateDatabase_20210309
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("as_api_cdcavell.Data.AuditHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Application")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("Entity")
                        .HasColumnType("TEXT");

                    b.Property<string>("KeyValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditHistory");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.History", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ActionById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ActionOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RolePermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActionById");

                    b.HasIndex("RolePermissionId");

                    b.HasIndex("StatusId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Description", "RoleId")
                        .IsUnique();

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Registration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ApprovedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("RevokedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ValidationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidationToken")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RevokedById");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ResourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("Description", "ResourceId")
                        .IsUnique();

                    b.ToTable("Role");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("PermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RegistrationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.HasIndex("RegistrationId", "RoleId", "PermissionId")
                        .IsUnique();

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Status", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("Status");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.History", b =>
                {
                    b.HasOne("as_api_cdcavell.Data.Registration", "ActionBy")
                        .WithMany()
                        .HasForeignKey("ActionById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("as_api_cdcavell.Data.RolePermission", "RolePermission")
                        .WithMany("History")
                        .HasForeignKey("RolePermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("as_api_cdcavell.Data.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionBy");

                    b.Navigation("RolePermission");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Permission", b =>
                {
                    b.HasOne("as_api_cdcavell.Data.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Registration", b =>
                {
                    b.HasOne("as_api_cdcavell.Data.Registration", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("as_api_cdcavell.Data.Registration", "RevokedBy")
                        .WithMany()
                        .HasForeignKey("RevokedById");

                    b.Navigation("ApprovedBy");

                    b.Navigation("RevokedBy");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Role", b =>
                {
                    b.HasOne("as_api_cdcavell.Data.Resource", "Resource")
                        .WithMany("Roles")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.RolePermission", b =>
                {
                    b.HasOne("as_api_cdcavell.Data.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("as_api_cdcavell.Data.Registration", "Registration")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("as_api_cdcavell.Data.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("as_api_cdcavell.Data.Status", "Status")
                        .WithMany("RolePermissions")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Registration");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Registration", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Resource", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.RolePermission", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("as_api_cdcavell.Data.Status", b =>
                {
                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
